#!/usr/bin/env bash

# Check if a file was provided as an argument
if [ $# -eq 0 ]; then
  echo "Usage: $0 <file_to_extract>"
  return 1
fi

local FILE="$1"
if [ ! -f "$FILE" ]; then
  echo "'$FILE' is not a valid file"
  return 1
fi

local filename=$(basename "$FILE")
case "$filename" in
  *.tar.bz2|*.tar.gz|*.tar.Z|*.tar.xz)
    local foldername="${filename%.*.*}"
    ;;
  *)
    local foldername="${filename%.*}"
    ;;
esac
local fullpath=$(realpath "$FILE")
local current_dir=$(pwd)

if [ -d "$foldername" ]; then
  echo -n "'$foldername' already exists. Do you want to overwrite it? (y/N) "
  read -r REPLY
  if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "Extraction cancelled."
    return 0
  fi
  rm -rf "$foldername"
fi

mkdir -p "$foldername"
cd "$foldername" || return 1

case $FILE in
  *.tar.bz2|*.tb2|*.tbz|*.tbz2) tar -jxf "$fullpath" ;;
  *.tar.gz|*.tar.Z|*.taz|*.tgz) tar -zxf "$fullpath" ;;
  *.tar.xz|*.txz) tar -Jxf "$fullpath" ;;
  *.tar) tar -xf "$fullpath" ;;
  *.zip) unzip -q "$fullpath" ;;
  *.dmg)
    local mount_point="/Volumes/$foldername"
    hdiutil attach -mountpoint "$mount_point" "$fullpath" -nobrowse
    cp -R "$mount_point"/* .
    hdiutil detach "$mount_point"
    ;;
  *.bz2) bunzip2 -c "$fullpath" > "${filename%.bz2}" ;;
  *.gz) gunzip -c "$fullpath" > "${filename%.gz}" ;;
  *.xz) unxz -c "$fullpath" > "${filename%.xz}" ;;
  *.Z) uncompress -c "$fullpath" > "${filename%.Z}" ;;
  *.7z) 7z x "$fullpath" ;;
  *.rar) unrar x "$fullpath" ;;
  *)
    echo "'$FILE' cannot be extracted via extract()"
    cd "$current_dir" || return 1
    rm -r "$foldername"
    return 1
    ;;
esac

if [ $? -eq 0 ]; then
  echo "Extracted '$FILE' to '$foldername'"
else
  echo "Extraction failed for '$FILE'"
  cd "$current_dir" || return 1
  rm -r "$foldername"
  return 1
fi

cd "$current_dir" || return 1
