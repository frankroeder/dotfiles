#!/usr/bin/env bash

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[1;34m'
RESET='\033[0m'

success() {
  printf "${GREEN}✓${RESET} %s\n" "${@}"
}

error() {
  printf "${RED}✗${RESET} %s\n" "${@}"
}

info() {
  printf "${BLUE}==>${RESET} %s\n" "${@}"
}

exec_routine() {
  info "Starting ${1}"
  if $1; then
    success "${1}"
  else
    error "${1}"
  fi
}

brew_update() {
  brew update
  brew upgrade --display-times
  brew upgrade --cask
  brew autoremove
  brew cleanup -s --prune=7
}

npm_update() {
  npm install npm@latest --location=global
  npm update --location=global
}

fzf_update() {
  [ -d "$HOME/.fzf" ] && (cd "$HOME/.fzf" && git pull && ./install --bin)
}

nvim_update() {
  nvim --headless "+Lazy! sync" +TSUpdateSync +qa
  nvim --headless "+MasonUpdate" +qa
}

zplug_update() {
  zplug update
  zplug clear
}

mas_update() {
  mas upgrade
}

battery_update() {
  battery update
}

apt_update() {
  sudo apt update --yes
  sudo apt upgrade --yes
}

uv_update() {
  uv self update
}

macos_update() {
  sudo softwareupdate -i -a --restart
}

run() {
  if ! ping -c 1 google.com &> /dev/null; then
    error "No internet access"
    exit 1
  fi

  info "Checking for updates"

  sudo -v
  while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

  if [ "$OSTYPE" = "Darwin" ]; then
    [ $commands[brew] ] && exec_routine brew_update
    [ $commands[mas] ] && exec_routine mas_update
    [ $commands[battery] ] && exec_routine battery_update
  elif [[ "$OSTYPE" == "Linux" ]]; then
    exec_routine apt_update
    [ $commands[uv] ] && exec_routine uv_update
  fi

  [ $commands[npm] ] && exec_routine npm_update
  [ -d "$HOME/.fzf" ] && exec_routine fzf_update
  [ $commands[nvim] ] && exec_routine nvim_update
  [ $commands[zplug] ] && exec_routine zplug_update

  if [ "$OSTYPE" = "Darwin" ]; then
    success "macOS update complete"
    exec_routine macos_update
  else
    success "Linux update complete"
  fi
}

run
